#define _R2D_NAMESPACE_START_ namespace R2D {
#define lengthof(a) (((size_t)sizeof(a)) / (size_t)sizeof(*a))
#define assert_msg(cond, msg) if (!(cond)) { std::cerr << "R2D-ERROR: " << __FILE__ << ':' << __LINE__ << "\n  " << (msg) << std::endl; throw std::runtime_error(#cond); }
#define COL_FUNC_DEF(name, colldidor_a, colldidor_b) void (*name) (components::PhysicsBody* body_a, const colldidor_a* col_a, components::PhysicsBody* body_b, const colldidor_b* col_b)
#define SolverFunctionEntry(type_a, type_b, function_ptr) {{(CollidorShapeType)(type_a > type_b ? type_b : type_a), (CollidorShapeType)(type_a < type_b ? type_b : type_a)}, (Solver::SolverFunction)(function_ptr)}
#define doswap(a, b) __doswap__(a, b)
#define global
#define R2D_CLEAR_CLR sf::Color(12U, 12U, 12U, 0U)
#define min(a, b) (((a) < (b)) ? (a) : (b))
#define min(a, b) ((a) < (b) ? (a) : (b))
#define _R2D_COMP_NS_START_ _R2D_NAMESPACE_START_ namespace components {
